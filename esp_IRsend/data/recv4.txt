
0 Stop
1 Danbo
2 Stop
3 Reibo
4 Stop
5 Danbo
6

/* 0 */ 115, 3350,1550,500,400, 410,1203, 272, 5125, 0, 256, 256, 4, 21841, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/* 1 */ 531, 3350,1550,500,450, 411,1204, 272, 5125, 0, 256, 256, 21844, 324, 4096, 5456, 16, 0, 0, 0, 0, 272, 336, 1089, 1040, 276, 20, 1028, 4096, 4352, 1040, 1360, 5200, 16400, 0, 21845, 21845, 21845, 0, 17472, 0, 0, 0, 0, 0, 
/* 2 */ 531, 3400,1550,500,450, 411,1206, 272, 5125, 0, 256, 256, 21844, 324, 4096, 5456, 16, 0, 0, 0, 0, 272, 336, 1025, 1040, 277, 20, 1028, 4096, 4352, 1040, 1360, 5200, 16400, 0, 21845, 21845, 21845, 0, 17493, 0, 0, 0, 0, 0, 
/* 3 */ 531, 3400,1500,500,450, 408,1220, 272, 5125, 0, 256, 256, 21844, 324, 4096, 5457, 16, 0, 0, 0, 0, 272, 336, 1025, 1040, 4, 20, 1028, 4096, 4352, 1040, 1360, 5200, 16400, 0, 21845, 21845, 21845, 0, 20485, 0, 0, 0, 0, 0,
/* 4 */ 115, 3400,1550,450,400, 412,1197, 272, 5125, 0, 256, 256, 4, 21841, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
/* 5 */ 531, 3400,1550,450,450, 409,1217, 272, 5125, 0, 256, 256, 21844, 324, 4096, 17473, 1, 0, 0, 0, 0, 272, 336, 1025, 1040, 1, 20, 1028, 4096, 4352, 1040, 1360, 5200, 16400, 0, 21845, 21845, 21845, 0, 16709, 0, 0, 0, 0, 0,
/* 6 */ 531, 3350,1550,500,450, 409,1214, 272, 5125, 0, 256, 256, 21844, 324, 4096, 5457, 16, 0, 0, 0, 0, 272, 336, 1025, 1040, 4, 20, 1029, 4096, 4352, 1040, 1360, 5200, 16400, 0, 21845, 21845, 21845, 0, 20484, 0, 0, 0, 0, 0,


Start ESP IRrecv
decodeh
decodeht2
116
decodeht3
decoded:
RawTiming[115]: 
     +3350, -1550     + 500, - 300     + 500, - 300     + 500, -1150
     + 500, - 300     + 500, -1150     + 500, - 300     + 500, - 350
     + 450, - 350     + 450, -1200     + 450, -1200     + 450, - 350
     + 450, - 350     + 450, - 350     + 450, -1200     + 450, -1200
     + 450, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, -1250     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, -1200     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, -1200     + 450, - 350     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 400, -1250     + 400 ;
decoding data 115
th:775.00
low:ave 410.00, min 300.00, max 500.00, cnt 95, stdev 48.45
high:ave 1203.13, min 1150.00, max 1250.00, cnt 16, stdev 27.78
uint16_t irLen = 45 ;
uint16_t irData[] = {
// len, 1st,2nd,3rd,last, low,high, 4th-(encoded),...
/* 0 */ 115, 3350,1550,500,400, 410,1203, 272, 5125, 0, 256, 256, 4, 21841, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
};
buffer len : used= 14 / buff= 45
Binary(4th-): 0000100010000000 1010000000101000 0000000000000000 0000000010000000 0000000010000000 0010000000000000 1000101010101010 ;

decodeh
decodeht2
532
decodeht3
decoded:
RawTiming[531]: 
     +3350, -1550     + 500, - 300     + 500, - 350     + 500, -1150
     + 450, - 350     + 500, -1150     + 450, - 350     + 500, - 300
     + 500, - 300     + 500, -1150     + 500, -1150     + 500, - 300
     + 500, - 300     + 500, - 300     + 500, -1150     + 500, -1150
     + 500, - 300     + 500, - 350     + 450, - 350     + 450, - 350
     + 450, - 350     + 450, - 350     + 500, - 350     + 450, - 350
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 350
     + 500, - 350     + 450, -1200     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, -1200     + 450, - 350     + 450, - 400
     + 400, - 400     + 450, - 350     + 450, -1200     + 450, -1200
     + 400, -1250     + 400, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, - 350     + 450, -1200     + 450, - 350
     + 450, -1200     + 450, -1200     + 450, - 350     + 450, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 350     + 450, - 400     + 400, - 400     + 450, -1200
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, -1200
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, -1200
     + 450, - 350     + 450, -1200     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 450, -1200
     + 400, -1250     + 400, -1250     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, -1200     + 450, - 350     + 450, - 350
     + 450, -1200     + 450, - 350     + 450, -1200     + 450, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, -1200
     + 450, - 350     + 450, - 350     + 450, -1200     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, -1250     + 400, -1250
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, -1200     + 450, -1200
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, -1200     + 450, - 350
     + 450, - 350     + 450, - 400     + 400, -1200     + 450, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 450, -1200
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, -1250
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, -1200
     + 450, - 350     + 450, - 350     + 450, -1200     + 450, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, -1200
     + 450, -1200     + 450, -1200     + 400, -1250     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, -1200
     + 450, -1200     + 450, - 350     + 450, -1200     + 450, -1200
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, -1200     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, -1250     + 400, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 400, -1250     + 400, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 400, -1250
     + 400, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 450, - 350     + 450, - 350
     + 450, -1200     + 450, - 350     + 450, -1200     + 450, - 350
     + 450, -1200     + 450 ;
decoding data 531
th:775.00
low:ave 411.17, min 300.00, max 500.00, cnt 443, stdev 44.50
high:ave 1204.17, min 1150.00, max 1250.00, cnt 84, stdev 23.40
uint16_t irLen = 45 ;
uint16_t irData[] = {
// len, 1st,2nd,3rd,last, low,high, 4th-(encoded),...
/* 1 */ 531, 3350,1550,500,450, 411,1204, 272, 5125, 0, 256, 256, 21844, 324, 4096, 5456, 16, 0, 0, 0, 0, 272, 336, 1089, 1040, 276, 20, 1028, 4096, 4352, 1040, 1360, 5200, 16400, 0, 21845, 21845, 21845, 0, 17472, 0, 0, 0, 0, 0, 
};
buffer len : used= 40 / buff= 45
Binary(4th

decodeh
decodeht2
532
decodeht3
decoded:
RawTiming[531]: 
     +3400, -1550     + 500, - 300     + 500, - 300     + 500, -1150
     + 500, - 300     + 500, -1150     + 500, - 300     + 500, - 350
     + 450, - 350     + 450, -1200     + 450, -1150     + 500, - 350
     + 450, - 350     + 450, - 350     + 450, -1200     + 450, -1200
     + 450, - 350     + 450, - 350     + 450, - 350     + 500, - 350
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 350
     + 500, - 350     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, -1250     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 450, -1200     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, - 350     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 400, - 400     + 450, -1200     + 400, - 400
     + 450, -1200     + 450, -1200     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, -1200
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, -1250
     + 400, -1250     + 400, -1200     + 450, -1200     + 450, -1200
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, - 350
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, - 350     + 500, - 350     + 450, -1200
     + 450, - 350     + 450, -1200     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, -1200
     + 450, -1200     + 450, -1200     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, -1200     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 450, -1200     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, -1200
     + 450, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 450, - 350     + 450, -1200     + 450, -1200     + 400, -1250
     + 400, - 400     + 400, -1250     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, - 350     + 450, -1200     + 450, -1200
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, -1200     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, -1200
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, -1250     + 400, - 400     + 450, -1200
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, -1200
     + 450, - 350     + 450, - 400     + 400, -1200     + 450, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, - 350
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, -1200
     + 450, -1200     + 450, - 350     + 450, -1200     + 450, -1200
     + 450, - 350     + 450, - 400     + 400, - 400     + 450, -1200
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, -1200     + 450, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, -1250     + 400, -1250     + 400, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 400, -1250
     + 400, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 400, -1250     + 400, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, - 350     + 450, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, -1250     + 400, -1200     + 450, -1200
     + 450, -1200     + 450, - 350     + 450, -1200     + 450, - 400
     + 400, -1200     + 450 ;
decoding data 531
th:775.00
low:ave 411.02, min 300.00, max 500.00, cnt 440, stdev 42.48
high:ave 1206.32, min 1150.00, max 1250.00, cnt 87, stdev 21.16
uint16_t irLen = 45 ;
uint16_t irData[] = {
// len, 1st,2nd,3rd,last, low,high, 4th-(encoded),...
/* 2 */ 531, 3400,1550,500,450, 411,1206, 272, 5125, 0, 256, 256, 21844, 324, 4096, 5456, 16, 0, 0, 0, 0, 272, 336, 1025, 1040, 277, 20, 1028, 4096, 4352, 1040, 1360, 5200, 16400, 0, 21845, 21845, 21845, 0, 17493, 0, 0, 0, 0, 0, 
};
buffer len : used= 40 / buff= 45
Binary(4th

decodeh
decodeht2
532
decodeht3
decoded:
RawTiming[531]: 
     +3400, -1500     + 500, - 300     + 500, - 350     + 450, -1150
     + 500, - 350     + 450, -1200     + 450, - 350     + 450, - 350
     + 450, - 350     + 450, -1200     + 450, -1200     + 450, - 350
     + 450, - 350     + 450, - 350     + 500, -1150     + 450, -1200
     + 450, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 450, -1200     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, -1200     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, -1250     + 400, -1250
     + 400, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, - 350     + 450, -1200     + 450, - 350
     + 450, -1200     + 450, -1200     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, -1250
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, -1250
     + 400, -1250     + 400, -1200     + 450, -1200     + 450, -1200
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 450, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 400     + 400, -1200
     + 450, -1200     + 450, -1200     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, -1200     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 400, - 400     + 450, -1200     + 400, - 400
     + 450, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, -1250     + 400, -1250
     + 400, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 400, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, -1200
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, -1250     + 400, - 400     + 450, -1200
     + 400, - 400     + 450, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 400     + 400, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, -1250
     + 400, -1250     + 400, - 400     + 400, -1250     + 400, -1250
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, -1200
     + 400, - 400     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, -1250     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, -1250     + 400, -1250     + 400, -1250
     + 400, -1250     + 400, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 400, -1250     + 400, -1250     + 400, -1250     + 400, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 400, -1250     + 400, -1250
     + 400, -1200     + 450, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, -1250     + 400, -1250     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, -1200
     + 450, -1200     + 450 ;
decoding data 531
th:775.00
low:ave 408.11, min 300.00, max 500.00, cnt 444, stdev 29.67
high:ave 1219.88, min 1150.00, max 1250.00, cnt 83, stdev 26.79
uint16_t irLen = 45 ;
uint16_t irData[] = {
// len, 1st,2nd,3rd,last, low,high, 4th-(encoded),...
/* 3 */ 531, 3400,1500,500,450, 408,1220, 272, 5125, 0, 256, 256, 21844, 324, 4096, 5457, 16, 0, 0, 0, 0, 272, 336, 1025, 1040, 4, 20, 1028, 4096, 4352, 1040, 1360, 5200, 16400, 0, 21845, 21845, 21845, 0, 20485, 0, 0, 0, 0, 0, 
};
buffer len : used= 40 / buff= 45
Binary(4th

decodeh
decodeht2
116
decodeht3
decoded:
RawTiming[115]: 
     +3400, -1550     + 450, - 350     + 500, - 300     + 500, -1150
     + 500, - 300     + 500, -1150     + 450, - 350     + 500, - 300
     + 500, - 350     + 450, -1150     + 500, -1150     + 500, - 300
     + 500, - 350     + 450, - 350     + 450, -1200     + 450, -1200
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, - 350
     + 450, - 350     + 450, -1200     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, -1200     + 450, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, -1200     + 450, - 350
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 450, -1200     + 450, - 350     + 450, -1200
     + 450, -1200     + 450, -1200     + 400, -1250     + 400, -1250
     + 400, -1250     + 400 ;
decoding data 115
th:775.00
low:ave 411.58, min 300.00, max 500.00, cnt 95, stdev 50.50
high:ave 1196.88, min 1150.00, max 1250.00, cnt 16, stdev 32.92
uint16_t irLen = 45 ;
uint16_t irData[] = {
// len, 1st,2nd,3rd,last, low,high, 4th-(encoded),...
/* 4 */ 115, 3400,1550,450,400, 412,1197, 272, 5125, 0, 256, 256, 4, 21841, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
};
buffer len : used= 14 / buff= 45
Binary(4th-): 0000100010000000 1010000000101000 0000000000000000 0000000010000000 0000000010000000 0010000000000000 1000101010101010 ;

decodeh
decodeht2
532
decodeht3
decoded:
RawTiming[531]: 
     +3400, -1550     + 450, - 350     + 500, - 300     + 500, -1150
     + 500, - 300     + 500, -1150     + 450, - 350     + 500, - 300
     + 500, - 300     + 500, -1150     + 500, -1150     + 450, - 350
     + 500, - 350     + 450, - 350     + 450, -1200     + 450, -1200
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, - 400     + 450, - 350     + 450, - 350
     + 450, - 350     + 450, -1200     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, - 350
     + 450, - 400     + 400, -1200     + 450, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, -1200     + 450, -1200
     + 400, -1250     + 400, -1250     + 400, -1250     + 400, -1250
     + 400, -1200     + 450, - 400     + 400, -1250     + 400, - 400
     + 400, -1250     + 400, -1200     + 450, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, -1200
     + 400, - 400     + 450, -1200     + 450, - 350     + 450, - 350
     + 450, -1200     + 450, - 350     + 450, -1200     + 450, - 400
     + 400, -1200     + 450, -1200     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 450, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 400     + 400, -1200
     + 450, -1200     + 450, -1200     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, -1200     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 400, - 400     + 450, -1200     + 450, - 350
     + 450, - 400     + 400, -1200     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, - 400
     + 400, - 400     + 400, - 400     + 400, -1250     + 400, -1250
     + 400, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 400, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, -1200
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 450, -1200     + 400, - 400     + 450, -1200
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 400, - 400     + 450, - 400     + 400, - 400     + 400, -1250
     + 400, -1200     + 450, -1200     + 450, -1200     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, -1250
     + 400, -1250     + 400, - 400     + 400, -1250     + 400, -1250
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, -1200
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, -1250     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 450, -1200     + 400, -1250     + 400, -1250
     + 400, -1250     + 400, -1250     + 400, -1250     + 400, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 400, -1250     + 400, -1250     + 400, -1250
     + 400, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 400, -1250     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 450, -1200     + 450, -1200     + 400, - 400
     + 450, -1200     + 400, -1250     + 400, - 400     + 450, - 350
     + 450, -1200     + 450 ;
decoding data 531
th:775.00
low:ave 408.65, min 300.00, max 500.00, cnt 445, stdev 32.12
high:ave 1217.07, min 1150.00, max 1250.00, cnt 82, stdev 28.36
uint16_t irLen = 45 ;
uint16_t irData[] = {
// len, 1st,2nd,3rd,last, low,high, 4th-(encoded),...
/* 5 */ 531, 3400,1550,450,450, 409,1217, 272, 5125, 0, 256, 256, 21844, 324, 4096, 17473, 1, 0, 0, 0, 0, 272, 336, 1025, 1040, 1, 20, 1028, 4096, 4352, 1040, 1360, 5200, 16400, 0, 21845, 21845, 21845, 0, 16709, 0, 0, 0, 0, 0, 
};
buffer len : used= 40 / buff= 45
Binary(4th

decodeh
decodeht2
532
decodeht3
decoded:
RawTiming[531]: 
     +3350, -1550     + 500, - 300     + 500, - 300     + 500, -1150
     + 500, - 300     + 500, -1150     + 500, - 300     + 500, - 350
     + 450, - 350     + 450, -1200     + 450, -1200     + 450, - 350
     + 450, - 350     + 450, - 350     + 450, -1200     + 450, -1200
     + 450, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 400     + 400, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 400, - 400     + 450, -1200     + 400, - 400
     + 450, -1200     + 450, -1200     + 400, - 400     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 400     + 400, -1200
     + 450, - 400     + 400, -1250     + 400, - 400     + 400, -1250
     + 400, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 450, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 400     + 400, -1200
     + 450, - 400     + 400, -1200     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, -1200
     + 450, -1200     + 450, -1200     + 400, - 400     + 450, - 400
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, -1200     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 450, - 350     + 450, - 400     + 400, -1200     + 450, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, -1250     + 400, -1250
     + 400, - 400     + 400, - 400     + 400, - 400     + 400, - 400
     + 450, - 350     + 450, -1200     + 450, -1200     + 450, - 350
     + 450, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 400, -1250     + 400, - 400     + 400, -1250
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, -1200
     + 450, - 350     + 450, - 400     + 400, -1250     + 400, - 400
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, -1200
     + 400, -1250     + 400, -1250     + 400, -1250     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 400     + 400, -1200
     + 450, -1200     + 450, - 400     + 400, -1200     + 450, -1200
     + 450, - 400     + 400, - 400     + 400, - 400     + 400, -1250
     + 400, - 400     + 400, - 400     + 400, - 400     + 450, - 350
     + 450, -1200     + 450, - 400     + 400, - 400     + 400, - 400
     + 400, - 400     + 400, - 400     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, -1250     + 400, -1250     + 400, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 400, -1250     + 400, -1250
     + 400, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 450, -1200     + 450, -1200     + 450, -1200     + 450, -1200
     + 400, -1250     + 400, -1250     + 400, -1200     + 450, -1200
     + 450, -1200     + 450, - 350     + 450, - 400     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 350     + 450, - 400
     + 400, - 400     + 400, - 400     + 400, -1250     + 400, - 400
     + 400, - 400     + 450, - 350     + 450, - 400     + 400, -1200
     + 450, -1200     + 450 ;
decoding data 531
th:775.00
low:ave 409.12, min 300.00, max 500.00, cnt 444, stdev 31.50
high:ave 1214.46, min 1150.00, max 1250.00, cnt 83, stdev 25.16
uint16_t irLen = 45 ;
uint16_t irData[] = {
// len, 1st,2nd,3rd,last, low,high, 4th-(encoded),...
/* 6 */ 531, 3350,1550,500,450, 409,1214, 272, 5125, 0, 256, 256, 21844, 324, 4096, 5457, 16, 0, 0, 0, 0, 272, 336, 1025, 1040, 4, 20, 1029, 4096, 4352, 1040, 1360, 5200, 16400, 0, 21845, 21845, 21845, 0, 20484, 0, 0, 0, 0, 0, 
};
buffer len : used= 40 / buff= 45
Binary(4th

